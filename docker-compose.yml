version: '3.8'

services:
#    postgres:
#        image: postgres:12.4-alpine
#        restart: on-failure
#        environment:
#          POSTGRES_DB: ${DB_NAME}
#          POSTGRES_USER: ${DB_USER}
#          POSTGRES_PASSWORD: ${DB_PASSWORD}
#          PGDAT: /var/lib/postgresql/data
#        volumes:
#            - ./db-data/postgres:/var/lib/postgresql/data:rw
#        ports:
#          - "5432:5432"
    mysql:
        image: mysql
        container_name: app_mysql
        restart: on-failure
        environment:
            MYSQL_ROOT_PASSWORD: ${ROOT_PASSWORD}
            MYSQL_DATABASE: ${DB_NAME}
            MYSQL_USER: ${DB_USER}
            MYSQL_PASSWORD: ${DB_PASSWORD}
        volumes:
            - ./db-data/mysql:/var/lib/mysql:rw
        ports:
            - "9906:3306"
    php:
        build:
            context: .
            target: app_php
        image: sf-docker/php:dev
        container_name: app_php
        working_dir: /var/www
        restart: on-failure
        environment:
            APP_ENV: dev
            APP_DEBUG: 1
            PHP_DATE_TIMEZONE: ${PHP_DATE_TIMEZONE:-UTC}
            XDEBUG_CONFIG: remote_host=docker.for.mac.localhost
            PHP_IDE_CONFIG: serverName=localhost
        depends_on:
            - mysql
#            - postgres
        links:
            - "mysql:mysql"
        volumes:
            -   ./src/${PROJECT_NAME}:/var/www/app:rw,cached

    nginx:
        build:
            context: .
            target: app_nginx
        image: sf-docker/nginx:dev
        container_name: app_web
        working_dir: /var/www
        restart: on-failure
        environment:
            - NGINX_HOST=localhost
            - NGINX_PORT=80
        depends_on:
            - php
        volumes:
            - ./src/${PROJECT_NAME}:/var/www/app
        ports:
            - "8080:80"
